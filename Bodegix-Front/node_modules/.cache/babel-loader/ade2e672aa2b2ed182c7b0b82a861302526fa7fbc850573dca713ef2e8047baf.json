{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\porra\\\\Documents\\\\Bodegix\\\\Bodegix-Front\\\\src\\\\pages\\\\admin\\\\VisualizacionGraficas.jsx\",\n  _s = $RefreshSig$();\n// src/pages/admin/VisualizacionGraficas.jsx\n\nimport React, { useEffect, useState } from 'react';\nimport { Box, Typography, Paper, Grid, Chip, Divider } from '@mui/material';\nimport Sidebar from '../../components/Layout/Sidebar';\nimport Topbar from '../../components/Layout/Topbar';\nimport BusinessIcon from '@mui/icons-material/Business';\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport WarningIcon from '@mui/icons-material/Warning';\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getStatusIcon = estado => {\n  if (estado === 'activa') return /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n    color: \"success\",\n    fontSize: \"large\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 35\n  }, this);\n  if (estado === 'inactiva') return /*#__PURE__*/_jsxDEV(HighlightOffIcon, {\n    color: \"error\",\n    fontSize: \"large\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 37\n  }, this);\n  return /*#__PURE__*/_jsxDEV(WarningIcon, {\n    color: \"warning\",\n    fontSize: \"large\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\nconst VisualizacionGraficas = () => {\n  _s();\n  const [suscripciones, setSuscripciones] = useState([]);\n  const [empresas, setEmpresas] = useState([]);\n  const token = localStorage.getItem('token');\n  const fetchDatos = async () => {\n    try {\n      const [resEmpresas, resSuscripciones] = await Promise.all([fetch('/api/empresas', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), fetch('/api/suscripciones', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })]);\n      const empresasData = await resEmpresas.json();\n      const suscripcionesData = await resSuscripciones.json();\n      setEmpresas(empresasData);\n      setSuscripciones(suscripcionesData);\n    } catch (err) {\n      console.error('Error al obtener empresas o suscripciones:', err);\n    }\n  };\n  useEffect(() => {\n    fetchDatos();\n  }, []);\n\n  // ✅ Filtrar la última suscripción por empresa\n  const ultimasSuscripciones = Array.from(suscripciones.sort((a, b) => new Date(b.fecha_inicio) - new Date(a.fecha_inicio)).reduce((map, sub) => {\n    if (!map.has(sub.empresa_id)) map.set(sub.empresa_id, sub);\n    return map;\n  }, new Map()).values());\n  const empresasConSuscripcion = ultimasSuscripciones.map(sub => {\n    var _sub$empresa;\n    return (_sub$empresa = sub.empresa) === null || _sub$empresa === void 0 ? void 0 : _sub$empresa.id;\n  });\n  const empresasSinSuscripcion = empresas.filter(e => !empresasConSuscripcion.includes(e.id));\n\n  // ✅ Formato para gráfica: agrupado por año\n  const pagosPorAnio = {};\n  suscripciones.forEach(sub => {\n    var _sub$empresa2;\n    const anio = new Date(sub.fecha_inicio).getFullYear();\n    const nombre = ((_sub$empresa2 = sub.empresa) === null || _sub$empresa2 === void 0 ? void 0 : _sub$empresa2.nombre) || 'Sin Empresa';\n    if (!pagosPorAnio[anio]) pagosPorAnio[anio] = {};\n    pagosPorAnio[anio][nombre] = (pagosPorAnio[anio][nombre] || 0) + 1;\n  });\n  const dataGrafica = Object.entries(pagosPorAnio).map(([anio, empresas]) => ({\n    anio,\n    ...empresas\n  }));\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    minHeight: \"100vh\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      flexGrow: 1,\n      p: 3,\n      children: [/*#__PURE__*/_jsxDEV(Topbar, {\n        title: \"Visualizaci\\xF3n de Gr\\xE1ficas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 3,\n          mb: 3\n        },\n        elevation: 3,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: \"Estado de Suscripciones (\\xDAltima actualizaci\\xF3n por empresa)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"text.secondary\",\n          children: \"Panel que muestra solo la \\xFAltima suscripci\\xF3n registrada de cada empresa.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [ultimasSuscripciones.map(sub => {\n          var _sub$empresa3, _sub$plan;\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              sx: {\n                p: 3,\n                textAlign: 'center',\n                borderRadius: 3,\n                boxShadow: 3,\n                transition: 'transform 0.2s',\n                '&:hover': {\n                  transform: 'scale(1.02)'\n                }\n              },\n              children: [getStatusIcon(sub.estado), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                mt: 1,\n                gutterBottom: true,\n                children: ((_sub$empresa3 = sub.empresa) === null || _sub$empresa3 === void 0 ? void 0 : _sub$empresa3.nombre) || 'Sin Empresa'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: sub.estado,\n                color: sub.estado === 'activa' ? 'success' : sub.estado === 'inactiva' ? 'error' : 'warning',\n                sx: {\n                  mb: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                sx: {\n                  my: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                gutterBottom: true,\n                children: [/*#__PURE__*/_jsxDEV(BusinessIcon, {\n                  fontSize: \"small\",\n                  sx: {\n                    verticalAlign: 'middle',\n                    mr: 0.5\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }, this), \"Plan: \", ((_sub$plan = sub.plan) === null || _sub$plan === void 0 ? void 0 : _sub$plan.nombre) || 'Sin plan']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [/*#__PURE__*/_jsxDEV(CalendarTodayIcon, {\n                  fontSize: \"small\",\n                  sx: {\n                    verticalAlign: 'middle',\n                    mr: 0.5\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, this), \"Inicio: \", sub.fecha_inicio]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [/*#__PURE__*/_jsxDEV(CalendarTodayIcon, {\n                  fontSize: \"small\",\n                  sx: {\n                    verticalAlign: 'middle',\n                    mr: 0.5\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this), \"Fin: \", sub.fecha_fin]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, `sub-${sub.id}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this);\n        }), empresasSinSuscripcion.map(empresa => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 3,\n              textAlign: 'center',\n              borderRadius: 3,\n              boxShadow: 3,\n              transition: 'transform 0.2s',\n              '&:hover': {\n                transform: 'scale(1.02)'\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(HighlightOffIcon, {\n              color: \"disabled\",\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              mt: 1,\n              gutterBottom: true,\n              children: empresa.nombre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: \"Sin suscripci\\xF3n\",\n              color: \"default\",\n              sx: {\n                mb: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              sx: {\n                my: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [/*#__PURE__*/_jsxDEV(BusinessIcon, {\n                fontSize: \"small\",\n                sx: {\n                  verticalAlign: 'middle',\n                  mr: 0.5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this), \"Tel\\xE9fono: \", empresa.telefono || 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [\"Direcci\\xF3n: \", empresa.direccion || 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)\n        }, `no-sub-${empresa.id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          mt: 6,\n          p: 3\n        },\n        elevation: 3,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Historial anual de suscripciones por empresa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 400,\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            data: dataGrafica,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"anio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              allowDecimals: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), Object.values(empresasConSuscripcion).map(empresaId => {\n              var _empresas$find;\n              const nombreEmpresa = (_empresas$find = empresas.find(e => e.id === empresaId)) === null || _empresas$find === void 0 ? void 0 : _empresas$find.nombre;\n              return /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: nombreEmpresa,\n                stroke: \"#8884d8\",\n                strokeWidth: 2,\n                dot: {\n                  r: 4\n                }\n              }, empresaId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(VisualizacionGraficas, \"0FszO6eGRdQrPSDfKTK0Uh9YNgo=\");\n_c = VisualizacionGraficas;\nexport default VisualizacionGraficas;\nvar _c;\n$RefreshReg$(_c, \"VisualizacionGraficas\");","map":{"version":3,"names":["React","useEffect","useState","Box","Typography","Paper","Grid","Chip","Divider","Sidebar","Topbar","BusinessIcon","CalendarTodayIcon","CheckCircleIcon","WarningIcon","HighlightOffIcon","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","getStatusIcon","estado","color","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","VisualizacionGraficas","_s","suscripciones","setSuscripciones","empresas","setEmpresas","token","localStorage","getItem","fetchDatos","resEmpresas","resSuscripciones","Promise","all","fetch","headers","Authorization","empresasData","json","suscripcionesData","err","console","error","ultimasSuscripciones","Array","from","sort","a","b","Date","fecha_inicio","reduce","map","sub","has","empresa_id","set","Map","values","empresasConSuscripcion","_sub$empresa","empresa","id","empresasSinSuscripcion","filter","e","includes","pagosPorAnio","forEach","_sub$empresa2","anio","getFullYear","nombre","dataGrafica","Object","entries","display","minHeight","children","flexGrow","p","title","sx","mb","elevation","variant","gutterBottom","container","spacing","_sub$empresa3","_sub$plan","item","xs","sm","md","textAlign","borderRadius","boxShadow","transition","transform","mt","label","my","verticalAlign","mr","plan","fecha_fin","telefono","direccion","width","height","data","strokeDasharray","dataKey","allowDecimals","empresaId","_empresas$find","nombreEmpresa","find","type","stroke","strokeWidth","dot","r","_c","$RefreshReg$"],"sources":["C:/Users/porra/Documents/Bodegix/Bodegix-Front/src/pages/admin/VisualizacionGraficas.jsx"],"sourcesContent":["// src/pages/admin/VisualizacionGraficas.jsx\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  Box, Typography, Paper, Grid, Chip, Divider\r\n} from '@mui/material';\r\nimport Sidebar from '../../components/Layout/Sidebar';\r\nimport Topbar from '../../components/Layout/Topbar';\r\nimport BusinessIcon from '@mui/icons-material/Business';\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport WarningIcon from '@mui/icons-material/Warning';\r\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\r\n\r\nimport {\r\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\r\n} from 'recharts';\r\n\r\nconst getStatusIcon = (estado) => {\r\n  if (estado === 'activa') return <CheckCircleIcon color=\"success\" fontSize=\"large\" />;\r\n  if (estado === 'inactiva') return <HighlightOffIcon color=\"error\" fontSize=\"large\" />;\r\n  return <WarningIcon color=\"warning\" fontSize=\"large\" />;\r\n};\r\n\r\nconst VisualizacionGraficas = () => {\r\n  const [suscripciones, setSuscripciones] = useState([]);\r\n  const [empresas, setEmpresas] = useState([]);\r\n  const token = localStorage.getItem('token');\r\n\r\n  const fetchDatos = async () => {\r\n    try {\r\n      const [resEmpresas, resSuscripciones] = await Promise.all([\r\n        fetch('/api/empresas', {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        }),\r\n        fetch('/api/suscripciones', {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        })\r\n      ]);\r\n\r\n      const empresasData = await resEmpresas.json();\r\n      const suscripcionesData = await resSuscripciones.json();\r\n\r\n      setEmpresas(empresasData);\r\n      setSuscripciones(suscripcionesData);\r\n    } catch (err) {\r\n      console.error('Error al obtener empresas o suscripciones:', err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDatos();\r\n  }, []);\r\n\r\n  // ✅ Filtrar la última suscripción por empresa\r\n  const ultimasSuscripciones = Array.from(\r\n    suscripciones\r\n      .sort((a, b) => new Date(b.fecha_inicio) - new Date(a.fecha_inicio))\r\n      .reduce((map, sub) => {\r\n        if (!map.has(sub.empresa_id)) map.set(sub.empresa_id, sub);\r\n        return map;\r\n      }, new Map())\r\n      .values()\r\n  );\r\n\r\n  const empresasConSuscripcion = ultimasSuscripciones.map(sub => sub.empresa?.id);\r\n  const empresasSinSuscripcion = empresas.filter(e => !empresasConSuscripcion.includes(e.id));\r\n\r\n  // ✅ Formato para gráfica: agrupado por año\r\n  const pagosPorAnio = {};\r\n  suscripciones.forEach(sub => {\r\n    const anio = new Date(sub.fecha_inicio).getFullYear();\r\n    const nombre = sub.empresa?.nombre || 'Sin Empresa';\r\n    if (!pagosPorAnio[anio]) pagosPorAnio[anio] = {};\r\n    pagosPorAnio[anio][nombre] = (pagosPorAnio[anio][nombre] || 0) + 1;\r\n  });\r\n\r\n  const dataGrafica = Object.entries(pagosPorAnio).map(([anio, empresas]) => ({\r\n    anio,\r\n    ...empresas\r\n  }));\r\n\r\n  return (\r\n    <Box display=\"flex\" minHeight=\"100vh\">\r\n      <Sidebar />\r\n      <Box flexGrow={1} p={3}>\r\n        <Topbar title=\"Visualización de Gráficas\" />\r\n\r\n        <Paper sx={{ p: 3, mb: 3 }} elevation={3}>\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            Estado de Suscripciones (Última actualización por empresa)\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"text.secondary\">\r\n            Panel que muestra solo la última suscripción registrada de cada empresa.\r\n          </Typography>\r\n        </Paper>\r\n\r\n        <Grid container spacing={3}>\r\n          {ultimasSuscripciones.map((sub) => (\r\n            <Grid item xs={12} sm={6} md={4} key={`sub-${sub.id}`}>\r\n              <Paper\r\n                sx={{\r\n                  p: 3,\r\n                  textAlign: 'center',\r\n                  borderRadius: 3,\r\n                  boxShadow: 3,\r\n                  transition: 'transform 0.2s',\r\n                  '&:hover': { transform: 'scale(1.02)' },\r\n                }}\r\n              >\r\n                {getStatusIcon(sub.estado)}\r\n                <Typography variant=\"h6\" mt={1} gutterBottom>\r\n                  {sub.empresa?.nombre || 'Sin Empresa'}\r\n                </Typography>\r\n                <Chip\r\n                  label={sub.estado}\r\n                  color={\r\n                    sub.estado === 'activa'\r\n                      ? 'success'\r\n                      : sub.estado === 'inactiva'\r\n                        ? 'error'\r\n                        : 'warning'\r\n                  }\r\n                  sx={{ mb: 1 }}\r\n                />\r\n                <Divider sx={{ my: 1 }} />\r\n                <Typography variant=\"body2\" gutterBottom>\r\n                  <BusinessIcon fontSize=\"small\" sx={{ verticalAlign: 'middle', mr: 0.5 }} />\r\n                  Plan: {sub.plan?.nombre || 'Sin plan'}\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  <CalendarTodayIcon fontSize=\"small\" sx={{ verticalAlign: 'middle', mr: 0.5 }} />\r\n                  Inicio: {sub.fecha_inicio}\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  <CalendarTodayIcon fontSize=\"small\" sx={{ verticalAlign: 'middle', mr: 0.5 }} />\r\n                  Fin: {sub.fecha_fin}\r\n                </Typography>\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n\r\n          {empresasSinSuscripcion.map((empresa) => (\r\n            <Grid item xs={12} sm={6} md={4} key={`no-sub-${empresa.id}`}>\r\n              <Paper\r\n                sx={{\r\n                  p: 3,\r\n                  textAlign: 'center',\r\n                  borderRadius: 3,\r\n                  boxShadow: 3,\r\n                  transition: 'transform 0.2s',\r\n                  '&:hover': { transform: 'scale(1.02)' },\r\n                }}\r\n              >\r\n                <HighlightOffIcon color=\"disabled\" fontSize=\"large\" />\r\n                <Typography variant=\"h6\" mt={1} gutterBottom>\r\n                  {empresa.nombre}\r\n                </Typography>\r\n                <Chip label=\"Sin suscripción\" color=\"default\" sx={{ mb: 1 }} />\r\n                <Divider sx={{ my: 1 }} />\r\n                <Typography variant=\"body2\">\r\n                  <BusinessIcon fontSize=\"small\" sx={{ verticalAlign: 'middle', mr: 0.5 }} />\r\n                  Teléfono: {empresa.telefono || 'N/A'}\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  Dirección: {empresa.direccion || 'N/A'}\r\n                </Typography>\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n\r\n        {/* 📈 Gráfica de línea: pagos por año */}\r\n        <Paper sx={{ mt: 6, p: 3 }} elevation={3}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Historial anual de suscripciones por empresa\r\n          </Typography>\r\n          <ResponsiveContainer width=\"100%\" height={400}>\r\n            <LineChart data={dataGrafica}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"anio\" />\r\n              <YAxis allowDecimals={false} />\r\n              <Tooltip />\r\n              <Legend />\r\n              {Object.values(empresasConSuscripcion).map((empresaId) => {\r\n                const nombreEmpresa = empresas.find(e => e.id === empresaId)?.nombre;\r\n                return (\r\n                  <Line\r\n                    key={empresaId}\r\n                    type=\"monotone\"\r\n                    dataKey={nombreEmpresa}\r\n                    stroke=\"#8884d8\"\r\n                    strokeWidth={2}\r\n                    dot={{ r: 4 }}\r\n                  />\r\n                );\r\n              })}\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </Paper>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default VisualizacionGraficas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}